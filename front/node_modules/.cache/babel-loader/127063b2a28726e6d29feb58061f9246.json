{"ast":null,"code":"import _slicedToArray from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/d/20160745/github/gadgetProj/front/src/components/react-sketch/SketchField.jsx\";\n\n/*eslint no-unused-vars: 0*/\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport History from './history';\nimport { uuid4 } from './utils';\nimport Select from './select';\nimport Pencil from './pencil';\nimport Line from './line';\nimport Rectangle from './rectangle';\nimport Circle from './circle';\nimport Pan from './pan';\nimport Tool from './tools';\n\nvar fabric = require('fabric').fabric;\n/**\n * Sketch Tool based on FabricJS for React Applications\n */\n\n\nvar SketchField =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(SketchField, _PureComponent);\n\n  function SketchField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SketchField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SketchField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      parentWidth: 550,\n      action: true\n    };\n\n    _this._initTools = function (fabricCanvas) {\n      _this._tools = {};\n      _this._tools[Tool.Select] = new Select(fabricCanvas);\n      _this._tools[Tool.Pencil] = new Pencil(fabricCanvas);\n      _this._tools[Tool.Line] = new Line(fabricCanvas);\n      _this._tools[Tool.Rectangle] = new Rectangle(fabricCanvas);\n      _this._tools[Tool.Circle] = new Circle(fabricCanvas);\n      _this._tools[Tool.Pan] = new Pan(fabricCanvas);\n    };\n\n    _this.enableTouchScroll = function () {\n      var canvas = _this._fc;\n      if (canvas.allowTouchScrolling) return;\n      canvas.allowTouchScrolling = true;\n    };\n\n    _this.disableTouchScroll = function () {\n      var canvas = _this._fc;\n\n      if (canvas.allowTouchScrolling) {\n        canvas.allowTouchScrolling = false;\n      }\n    };\n\n    _this.addImg = function (dataUrl) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var canvas = _this._fc;\n      fabric.Image.fromURL(dataUrl, function (oImg) {\n        var opts = {\n          left: Math.random() * (canvas.getWidth() - oImg.width * 0.5),\n          top: Math.random() * (canvas.getHeight() - oImg.height * 0.5),\n          scale: 0.5\n        };\n        Object.assign(opts, options);\n        oImg.scale(opts.scale);\n        oImg.set({\n          'left': opts.left,\n          'top': opts.top\n        });\n        canvas.add(oImg);\n      });\n    };\n\n    _this._onObjectAdded = function (e) {\n      if (!_this.state.action) {\n        _this.setState({\n          action: true\n        });\n\n        return;\n      }\n\n      var obj = e.target;\n      obj.__version = 1; // record current object state as json and save as originalState\n\n      var objState = obj.toJSON();\n      obj.__originalState = objState;\n      var state = JSON.stringify(objState); // object, previous state, current state\n\n      _this._history.keep([obj, state, state]);\n    };\n\n    _this._onObjectMoving = function (e) {};\n\n    _this._onObjectScaling = function (e) {};\n\n    _this._onObjectRotating = function (e) {};\n\n    _this._onObjectModified = function (e) {\n      var obj = e.target;\n      obj.__version += 1;\n      var prevState = JSON.stringify(obj.__originalState);\n      var objState = obj.toJSON(); // record current object state as json and update to originalState\n\n      obj.__originalState = objState;\n      var currState = JSON.stringify(objState);\n\n      _this._history.keep([obj, prevState, currState]);\n    };\n\n    _this._onObjectRemoved = function (e) {\n      var obj = e.target;\n\n      if (obj.__removed) {\n        obj.__version += 1;\n        return;\n      }\n\n      obj.__version = 0;\n    };\n\n    _this._onMouseDown = function (e) {\n      _this._selectedTool.doMouseDown(e);\n    };\n\n    _this._onMouseMove = function (e) {\n      _this._selectedTool.doMouseMove(e);\n    };\n\n    _this._onMouseOut = function (e) {\n      _this._selectedTool.doMouseOut(e);\n\n      if (_this.props.onChange) {\n        var onChange = _this.props.onChange;\n        setTimeout(function () {\n          onChange(e.e);\n        }, 10);\n      }\n    };\n\n    _this._onMouseUp = function (e) {\n      _this._selectedTool.doMouseUp(e); // Update the final state to new-generated object\n      // Ignore Path object since it would be created after mouseUp\n      // Assumed the last object in canvas.getObjects() in the newest object\n\n\n      if (_this.props.tool !== Tool.Pencil) {\n        var canvas = _this._fc;\n        var objects = canvas.getObjects();\n        var newObj = objects[objects.length - 1];\n\n        if (newObj && newObj.__version === 1) {\n          newObj.__originalState = newObj.toJSON();\n        }\n      }\n\n      if (_this.props.onChange) {\n        var onChange = _this.props.onChange;\n        setTimeout(function () {\n          onChange(e.e);\n        }, 10);\n      }\n    };\n\n    _this._resize = function (e) {\n      if (e) e.preventDefault();\n      var _this$props = _this.props,\n          widthCorrection = _this$props.widthCorrection,\n          heightCorrection = _this$props.heightCorrection;\n      var canvas = _this._fc;\n      var _this$_container = _this._container,\n          offsetWidth = _this$_container.offsetWidth,\n          clientHeight = _this$_container.clientHeight;\n      var prevWidth = canvas.getWidth();\n      var prevHeight = canvas.getHeight();\n      var wfactor = ((offsetWidth - widthCorrection) / prevWidth).toFixed(2);\n      var hfactor = ((clientHeight - heightCorrection) / prevHeight).toFixed(2);\n      canvas.setWidth(offsetWidth - widthCorrection);\n      canvas.setHeight(clientHeight - heightCorrection);\n\n      if (canvas.backgroundImage) {\n        // Need to scale background images as well\n        var bi = canvas.backgroundImage;\n        bi.width = bi.width * wfactor;\n        bi.height = bi.height * hfactor;\n      }\n\n      var objects = canvas.getObjects();\n\n      for (var i in objects) {\n        var obj = objects[i];\n        var scaleX = obj.scaleX;\n        var scaleY = obj.scaleY;\n        var left = obj.left;\n        var top = obj.top;\n        var tempScaleX = scaleX * wfactor;\n        var tempScaleY = scaleY * hfactor;\n        var tempLeft = left * wfactor;\n        var tempTop = top * hfactor;\n        obj.scaleX = tempScaleX;\n        obj.scaleY = tempScaleY;\n        obj.left = tempLeft;\n        obj.top = tempTop;\n        obj.setCoords();\n      }\n\n      _this.setState({\n        parentWidth: offsetWidth\n      });\n\n      canvas.renderAll();\n      canvas.calcOffset();\n    };\n\n    _this._backgroundColor = function (color) {\n      if (!color) return;\n      var canvas = _this._fc;\n      canvas.setBackgroundColor(color, function () {\n        return canvas.renderAll();\n      });\n    };\n\n    _this.zoom = function (factor) {\n      var canvas = _this._fc;\n      var objects = canvas.getObjects();\n\n      for (var i in objects) {\n        objects[i].scaleX = objects[i].scaleX * factor;\n        objects[i].scaleY = objects[i].scaleY * factor;\n        objects[i].left = objects[i].left * factor;\n        objects[i].top = objects[i].top * factor;\n        objects[i].setCoords();\n      }\n\n      canvas.renderAll();\n      canvas.calcOffset();\n    };\n\n    _this.undo = function () {\n      var history = _this._history;\n\n      var _history$getCurrent = history.getCurrent(),\n          _history$getCurrent2 = _slicedToArray(_history$getCurrent, 3),\n          obj = _history$getCurrent2[0],\n          prevState = _history$getCurrent2[1],\n          currState = _history$getCurrent2[2];\n\n      history.undo();\n\n      if (obj.__removed) {\n        _this.setState({\n          action: false\n        }, function () {\n          _this._fc.add(obj);\n\n          obj.__version -= 1;\n          obj.__removed = false;\n        });\n      } else if (obj.__version <= 1) {\n        _this._fc.remove(obj);\n      } else {\n        obj.__version -= 1;\n        obj.setOptions(JSON.parse(prevState));\n        obj.setCoords();\n\n        _this._fc.renderAll();\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange();\n      }\n    };\n\n    _this.redo = function () {\n      var history = _this._history;\n\n      if (history.canRedo()) {\n        var canvas = _this._fc; //noinspection Eslint\n\n        var _history$redo = history.redo(),\n            _history$redo2 = _slicedToArray(_history$redo, 3),\n            obj = _history$redo2[0],\n            prevState = _history$redo2[1],\n            currState = _history$redo2[2];\n\n        if (obj.__version === 0) {\n          _this.setState({\n            action: false\n          }, function () {\n            canvas.add(obj);\n            obj.__version = 1;\n          });\n        } else {\n          obj.__version += 1;\n          obj.setOptions(JSON.parse(currState));\n        }\n\n        obj.setCoords();\n        canvas.renderAll();\n\n        if (_this.props.onChange) {\n          _this.props.onChange();\n        }\n      }\n    };\n\n    _this.canUndo = function () {\n      return _this._history.canUndo();\n    };\n\n    _this.canRedo = function () {\n      return _this._history.canRedo();\n    };\n\n    _this.toDataURL = function (options) {\n      return _this._fc.toDataURL(options);\n    };\n\n    _this.toJSON = function (propertiesToInclude) {\n      return _this._fc.toJSON(propertiesToInclude);\n    };\n\n    _this.fromJSON = function (json) {\n      if (!json) return;\n      var canvas = _this._fc;\n      setTimeout(function () {\n        canvas.loadFromJSON(json, function () {\n          canvas.renderAll();\n\n          if (_this.props.onChange) {\n            _this.props.onChange();\n          }\n        });\n      }, 100);\n    };\n\n    _this.clear = function (propertiesToInclude) {\n      var discarded = _this.toJSON(propertiesToInclude);\n\n      _this._fc.clear();\n\n      _this._history.clear();\n\n      return discarded;\n    };\n\n    _this.removeSelected = function () {\n      var canvas = _this._fc;\n      var activeObj = canvas.getActiveObject();\n\n      if (activeObj) {\n        var selected = [];\n\n        if (activeObj.type === 'activeSelection') {\n          activeObj.forEachObject(function (obj) {\n            return selected.push(obj);\n          });\n        } else {\n          selected.push(activeObj);\n        }\n\n        selected.forEach(function (obj) {\n          obj.__removed = true;\n          var objState = obj.toJSON();\n          obj.__originalState = objState;\n          var state = JSON.stringify(objState);\n\n          _this._history.keep([obj, state, state]);\n\n          canvas.remove(obj);\n        });\n        canvas.discardActiveObject();\n        canvas.requestRenderAll();\n      }\n    };\n\n    _this.copy = function () {\n      var canvas = _this._fc;\n      canvas.getActiveObject().clone(function (cloned) {\n        return _this._clipboard = cloned;\n      });\n    };\n\n    _this.paste = function () {\n      // clone again, so you can do multiple copies.\n      _this._clipboard.clone(function (clonedObj) {\n        var canvas = _this._fc;\n        canvas.discardActiveObject();\n        clonedObj.set({\n          left: clonedObj.left + 10,\n          top: clonedObj.top + 10,\n          evented: true\n        });\n\n        if (clonedObj.type === 'activeSelection') {\n          // active selection needs a reference to the canvas.\n          clonedObj.canvas = canvas;\n          clonedObj.forEachObject(function (obj) {\n            return canvas.add(obj);\n          });\n          clonedObj.setCoords();\n        } else {\n          canvas.add(clonedObj);\n        }\n\n        _this._clipboard.top += 10;\n        _this._clipboard.left += 10;\n        canvas.setActiveObject(clonedObj);\n        canvas.requestRenderAll();\n      });\n    };\n\n    _this.setBackgroundFromDataUrl = function (dataUrl) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var canvas = _this._fc;\n\n      if (options.stretched) {\n        delete options.stretched;\n        Object.assign(options, {\n          width: canvas.width,\n          height: canvas.height\n        });\n      }\n\n      if (options.stretchedX) {\n        delete options.stretchedX;\n        Object.assign(options, {\n          width: canvas.width\n        });\n      }\n\n      if (options.stretchedY) {\n        delete options.stretchedY;\n        Object.assign(options, {\n          height: canvas.height\n        });\n      }\n\n      var img = new Image();\n\n      img.onload = function () {\n        return canvas.setBackgroundImage(new fabric.Image(img), function () {\n          return canvas.renderAll();\n        }, options);\n      };\n\n      img.src = dataUrl;\n    };\n\n    _this.addText = function (text) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var canvas = _this._fc;\n      var iText = new fabric.IText(text, options);\n      var opts = {\n        left: (canvas.getWidth() - iText.width) * 0.5,\n        top: (canvas.getHeight() - iText.height) * 0.5\n      };\n      Object.assign(options, opts);\n      iText.set({\n        'left': options.left,\n        'top': options.top\n      });\n      canvas.add(iText);\n    };\n\n    _this.componentDidMount = function () {\n      var _this$props2 = _this.props,\n          tool = _this$props2.tool,\n          value = _this$props2.value,\n          undoSteps = _this$props2.undoSteps,\n          defaultValue = _this$props2.defaultValue,\n          backgroundColor = _this$props2.backgroundColor;\n      var canvas = _this._fc = new fabric.Canvas(_this._canvas\n      /*, {\n      preserveObjectStacking: false,\n      renderOnAddRemove: false,\n      skipTargetFind: true\n      }*/\n      );\n\n      _this._initTools(canvas); // set initial backgroundColor\n\n\n      _this._backgroundColor(backgroundColor);\n\n      var selectedTool = _this._tools[tool];\n      selectedTool.configureCanvas(_this.props);\n      _this._selectedTool = selectedTool; // Control resize\n\n      window.addEventListener('resize', _this._resize, false); // Initialize History, with maximum number of undo steps\n\n      _this._history = new History(undoSteps); // Events binding\n\n      canvas.on('object:added', _this._onObjectAdded);\n      canvas.on('object:modified', _this._onObjectModified);\n      canvas.on('object:removed', _this._onObjectRemoved);\n      canvas.on('mouse:down', _this._onMouseDown);\n      canvas.on('mouse:move', _this._onMouseMove);\n      canvas.on('mouse:up', _this._onMouseUp);\n      canvas.on('mouse:out', _this._onMouseOut);\n      canvas.on('object:moving', _this._onObjectMoving);\n      canvas.on('object:scaling', _this._onObjectScaling);\n      canvas.on('object:rotating', _this._onObjectRotating); // IText Events fired on Adding Text\n      // canvas.on(\"text:event:changed\", console.log)\n      // canvas.on(\"text:selection:changed\", console.log)\n      // canvas.on(\"text:editing:entered\", console.log)\n      // canvas.on(\"text:editing:exited\", console.log)\n\n      _this.disableTouchScroll();\n\n      _this._resize(); // initialize canvas with controlled value if exists\n\n\n      (value || defaultValue) && _this.fromJSON(value || defaultValue);\n    };\n\n    _this.componentWillUnmount = function () {\n      return window.removeEventListener('resize', _this._resize);\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      if (_this.state.parentWidth !== prevState.parentWidth || _this.props.width !== prevProps.width || _this.props.height !== prevProps.height) {\n        _this._resize();\n      }\n\n      if (_this.props.tool !== prevProps.tool) {\n        _this._selectedTool = _this._tools[_this.props.tool] || _this._tools[Tool.Pencil];\n      } //Bring the cursor back to default if it is changed by a tool\n\n\n      _this._fc.defaultCursor = 'default';\n\n      _this._selectedTool.configureCanvas(_this.props);\n\n      if (_this.props.backgroundColor !== prevProps.backgroundColor) {\n        _this._backgroundColor(_this.props.backgroundColor);\n      }\n\n      if (_this.props.value !== prevProps.value || _this.props.value && _this.props.forceValue) {\n        _this.fromJSON(_this.props.value);\n      }\n    };\n\n    _this.render = function () {\n      var _this$props3 = _this.props,\n          className = _this$props3.className,\n          style = _this$props3.style,\n          width = _this$props3.width,\n          height = _this$props3.height;\n      var canvasDivStyle = Object.assign({}, style ? style : {}, width ? {\n        width: width\n      } : {}, height ? {\n        height: height\n      } : {\n        height: 512\n      });\n      return React.createElement(\"div\", {\n        className: className,\n        ref: function ref(c) {\n          return _this._container = c;\n        },\n        style: canvasDivStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: uuid4(),\n        ref: function ref(c) {\n          return _this._canvas = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, \"Sorry, Canvas HTML5 element is not supported by your browser :(\"));\n    };\n\n    return _this;\n  }\n\n  return SketchField;\n}(PureComponent);\n\nSketchField.propTypes = {\n  // the color of the line\n  lineColor: PropTypes.string,\n  // The width of the line\n  lineWidth: PropTypes.number,\n  // the fill color of the shape when applicable\n  fillColor: PropTypes.string,\n  // the background color of the sketch\n  backgroundColor: PropTypes.string,\n  // the opacity of the object\n  opacity: PropTypes.number,\n  // number of undo/redo steps to maintain\n  undoSteps: PropTypes.number,\n  // The tool to use, can be pencil, rectangle, circle, brush;\n  tool: PropTypes.string,\n  // image format when calling toDataURL\n  imageFormat: PropTypes.string,\n  // Sketch data for controlling sketch from\n  // outside the component\n  value: PropTypes.object,\n  // Set to true if you wish to force load the given value, even if it is  the same\n  forceValue: PropTypes.bool,\n  // Specify some width correction which will be applied on auto resize\n  widthCorrection: PropTypes.number,\n  // Specify some height correction which will be applied on auto resize\n  heightCorrection: PropTypes.number,\n  // Specify action on change\n  onChange: PropTypes.func,\n  // Default initial value\n  defaultValue: PropTypes.object,\n  // Sketch width\n  width: PropTypes.number,\n  // Sketch height\n  height: PropTypes.number,\n  // Class name to pass to container div of canvas\n  className: PropTypes.string,\n  // Style options to pass to container div of canvas\n  style: PropTypes.object\n};\nSketchField.defaultProps = {\n  lineColor: 'black',\n  lineWidth: 10,\n  fillColor: 'transparent',\n  backgroundColor: 'transparent',\n  opacity: 1.0,\n  undoSteps: 25,\n  tool: Tool.Pencil,\n  widthCorrection: 2,\n  heightCorrection: 0,\n  forceValue: false\n};\nexport default SketchField;","map":{"version":3,"sources":["/mnt/d/20160745/github/gadgetProj/front/src/components/react-sketch/SketchField.jsx"],"names":["React","PureComponent","PropTypes","History","uuid4","Select","Pencil","Line","Rectangle","Circle","Pan","Tool","fabric","require","SketchField","state","parentWidth","action","_initTools","fabricCanvas","_tools","enableTouchScroll","canvas","_fc","allowTouchScrolling","disableTouchScroll","addImg","dataUrl","options","Image","fromURL","oImg","opts","left","Math","random","getWidth","width","top","getHeight","height","scale","Object","assign","set","add","_onObjectAdded","e","setState","obj","target","__version","objState","toJSON","__originalState","JSON","stringify","_history","keep","_onObjectMoving","_onObjectScaling","_onObjectRotating","_onObjectModified","prevState","currState","_onObjectRemoved","__removed","_onMouseDown","_selectedTool","doMouseDown","_onMouseMove","doMouseMove","_onMouseOut","doMouseOut","props","onChange","setTimeout","_onMouseUp","doMouseUp","tool","objects","getObjects","newObj","length","_resize","preventDefault","widthCorrection","heightCorrection","_container","offsetWidth","clientHeight","prevWidth","prevHeight","wfactor","toFixed","hfactor","setWidth","setHeight","backgroundImage","bi","i","scaleX","scaleY","tempScaleX","tempScaleY","tempLeft","tempTop","setCoords","renderAll","calcOffset","_backgroundColor","color","setBackgroundColor","zoom","factor","undo","history","getCurrent","remove","setOptions","parse","redo","canRedo","canUndo","toDataURL","propertiesToInclude","fromJSON","json","loadFromJSON","clear","discarded","removeSelected","activeObj","getActiveObject","selected","type","forEachObject","push","forEach","discardActiveObject","requestRenderAll","copy","clone","cloned","_clipboard","paste","clonedObj","evented","setActiveObject","setBackgroundFromDataUrl","stretched","stretchedX","stretchedY","img","onload","setBackgroundImage","src","addText","text","iText","IText","componentDidMount","value","undoSteps","defaultValue","backgroundColor","Canvas","_canvas","selectedTool","configureCanvas","window","addEventListener","on","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","defaultCursor","forceValue","render","className","style","canvasDivStyle","c","propTypes","lineColor","string","lineWidth","number","fillColor","opacity","imageFormat","object","bool","func","defaultProps"],"mappings":"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","sourcesContent":["/*eslint no-unused-vars: 0*/\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport History from './history';\nimport {uuid4} from './utils';\nimport Select from './select';\nimport Pencil from './pencil';\nimport Line from './line';\nimport Rectangle from './rectangle';\nimport Circle from './circle';\nimport Pan from './pan';\nimport Tool from './tools';\n\nconst fabric = require('fabric').fabric;\n\n/**\n * Sketch Tool based on FabricJS for React Applications\n */\nclass SketchField extends PureComponent {\n\n  static propTypes = {\n    // the color of the line\n    lineColor: PropTypes.string,\n    // The width of the line\n    lineWidth: PropTypes.number,\n    // the fill color of the shape when applicable\n    fillColor: PropTypes.string,\n    // the background color of the sketch\n    backgroundColor: PropTypes.string,\n    // the opacity of the object\n    opacity: PropTypes.number,\n    // number of undo/redo steps to maintain\n    undoSteps: PropTypes.number,\n    // The tool to use, can be pencil, rectangle, circle, brush;\n    tool: PropTypes.string,\n    // image format when calling toDataURL\n    imageFormat: PropTypes.string,\n    // Sketch data for controlling sketch from\n    // outside the component\n    value: PropTypes.object,\n    // Set to true if you wish to force load the given value, even if it is  the same\n    forceValue: PropTypes.bool,\n    // Specify some width correction which will be applied on auto resize\n    widthCorrection: PropTypes.number,\n    // Specify some height correction which will be applied on auto resize\n    heightCorrection: PropTypes.number,\n    // Specify action on change\n    onChange: PropTypes.func,\n    // Default initial value\n    defaultValue: PropTypes.object,\n    // Sketch width\n    width: PropTypes.number,\n    // Sketch height\n    height: PropTypes.number,\n    // Class name to pass to container div of canvas\n    className: PropTypes.string,\n    // Style options to pass to container div of canvas\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    lineColor: 'black',\n    lineWidth: 10,\n    fillColor: 'transparent',\n    backgroundColor: 'transparent',\n    opacity: 1.0,\n    undoSteps: 25,\n    tool: Tool.Pencil,\n    widthCorrection: 2,\n    heightCorrection: 0,\n    forceValue: false\n  };\n\n  state = {\n    parentWidth: 550,\n    action: true\n  };\n  _initTools = (fabricCanvas) => {\n    this._tools = {};\n    this._tools[Tool.Select] = new Select(fabricCanvas);\n    this._tools[Tool.Pencil] = new Pencil(fabricCanvas);\n    this._tools[Tool.Line] = new Line(fabricCanvas);\n    this._tools[Tool.Rectangle] = new Rectangle(fabricCanvas);\n    this._tools[Tool.Circle] = new Circle(fabricCanvas);\n    this._tools[Tool.Pan] = new Pan(fabricCanvas)\n  };\n\n  /**\n   * Enable touch Scrolling on Canvas\n   */\n  enableTouchScroll = () => {\n    let canvas = this._fc;\n    if (canvas.allowTouchScrolling) return;\n    canvas.allowTouchScrolling = true\n  };\n\n  /**\n   * Disable touch Scrolling on Canvas\n   */\n  disableTouchScroll = () => {\n    let canvas = this._fc;\n    if (canvas.allowTouchScrolling) {\n      canvas.allowTouchScrolling = false\n    }\n  };\n\n  /**\n   * Add an image as object to the canvas\n   *\n   * @param dataUrl the image url or Data Url\n   * @param options object to pass and change some options when loading image, the format of the object is:\n   *\n   * {\n   *   left: <Number: distance from left of canvas>,\n   *   top: <Number: distance from top of canvas>,\n   *   scale: <Number: initial scale of image>\n   * }\n   */\n  addImg = (dataUrl, options = {}) => {\n    let canvas = this._fc;\n    fabric.Image.fromURL(dataUrl, (oImg) => {\n      let opts = {\n        left: Math.random() * (canvas.getWidth() - oImg.width * 0.5),\n        top: Math.random() * (canvas.getHeight() - oImg.height * 0.5),\n        scale: 0.5\n      };\n      Object.assign(opts, options);\n      oImg.scale(opts.scale);\n      oImg.set({\n        'left': opts.left,\n        'top': opts.top\n      });\n      canvas.add(oImg);\n    });\n  };\n\n  /**\n   * Action when an object is added to the canvas\n   */\n  _onObjectAdded = (e) => {\n    if (!this.state.action) {\n      this.setState({ action: true });\n      return\n    }\n    let obj = e.target;\n    obj.__version = 1;\n    // record current object state as json and save as originalState\n    let objState = obj.toJSON();\n    obj.__originalState = objState;\n    let state = JSON.stringify(objState);\n    // object, previous state, current state\n    this._history.keep([obj, state, state])\n  };\n\n  /**\n   * Action when an object is moving around inside the canvas\n   */\n  _onObjectMoving = (e) => {\n\n  };\n\n  /**\n   * Action when an object is scaling inside the canvas\n   */\n  _onObjectScaling = (e) => {\n\n  };\n\n  /**\n   * Action when an object is rotating inside the canvas\n   */\n  _onObjectRotating = (e) => {\n\n  };\n\n  _onObjectModified = (e) => {\n    let obj = e.target;\n    obj.__version += 1;\n    let prevState = JSON.stringify(obj.__originalState);\n    let objState = obj.toJSON();\n    // record current object state as json and update to originalState\n    obj.__originalState = objState;\n    let currState = JSON.stringify(objState);\n    this._history.keep([obj, prevState, currState]);\n  };\n\n  /**\n   * Action when an object is removed from the canvas\n   */\n  _onObjectRemoved = (e) => {\n    let obj = e.target;\n    if (obj.__removed) {\n      obj.__version += 1;\n      return\n    }\n    obj.__version = 0;\n  };\n\n  /**\n   * Action when the mouse button is pressed down\n   */\n  _onMouseDown = (e) => {\n    this._selectedTool.doMouseDown(e);\n  };\n\n  /**\n   * Action when the mouse cursor is moving around within the canvas\n   */\n  _onMouseMove = (e) => {\n    this._selectedTool.doMouseMove(e);\n  };\n\n  /**\n   * Action when the mouse cursor is moving out from the canvas\n   */\n  _onMouseOut = (e) => {\n    this._selectedTool.doMouseOut(e);\n    if (this.props.onChange) {\n      let onChange = this.props.onChange;\n      setTimeout(() => {\n        onChange(e.e)\n      }, 10)\n    }\n  };\n\n  _onMouseUp = (e) => {\n    this._selectedTool.doMouseUp(e);\n    // Update the final state to new-generated object\n    // Ignore Path object since it would be created after mouseUp\n    // Assumed the last object in canvas.getObjects() in the newest object\n    if (this.props.tool !== Tool.Pencil) {\n      const canvas = this._fc;\n      const objects = canvas.getObjects();\n      const newObj = objects[objects.length - 1];\n      if (newObj && newObj.__version === 1) {\n        newObj.__originalState = newObj.toJSON();\n      }\n    }\n    if (this.props.onChange) {\n      let onChange = this.props.onChange;\n      setTimeout(() => {\n        onChange(e.e)\n      }, 10)\n    }\n  };\n\n  /**\n   * Track the resize of the window and update our state\n   *\n   * @param e the resize event\n   * @private\n   */\n  _resize = (e) => {\n    if (e) e.preventDefault();\n    let { widthCorrection, heightCorrection } = this.props;\n    let canvas = this._fc;\n    let { offsetWidth, clientHeight } = this._container;\n    let prevWidth = canvas.getWidth();\n    let prevHeight = canvas.getHeight();\n    let wfactor = ((offsetWidth - widthCorrection) / prevWidth).toFixed(2);\n    let hfactor = ((clientHeight - heightCorrection) / prevHeight).toFixed(2);\n    canvas.setWidth(offsetWidth - widthCorrection);\n    canvas.setHeight(clientHeight - heightCorrection);\n    if (canvas.backgroundImage) {\n      // Need to scale background images as well\n      let bi = canvas.backgroundImage;\n      bi.width = bi.width * wfactor;\n      bi.height = bi.height * hfactor\n    }\n    let objects = canvas.getObjects();\n    for (let i in objects) {\n      let obj = objects[i];\n      let scaleX = obj.scaleX;\n      let scaleY = obj.scaleY;\n      let left = obj.left;\n      let top = obj.top;\n      let tempScaleX = scaleX * wfactor;\n      let tempScaleY = scaleY * hfactor;\n      let tempLeft = left * wfactor;\n      let tempTop = top * hfactor;\n      obj.scaleX = tempScaleX;\n      obj.scaleY = tempScaleY;\n      obj.left = tempLeft;\n      obj.top = tempTop;\n      obj.setCoords()\n    }\n    this.setState({\n      parentWidth: offsetWidth\n    });\n    canvas.renderAll();\n    canvas.calcOffset();\n  };\n\n  /**\n   * Sets the background color for this sketch\n   * @param color in rgba or hex format\n   */\n  _backgroundColor = (color) => {\n    if (!color) return;\n    let canvas = this._fc;\n    canvas.setBackgroundColor(color, () => canvas.renderAll())\n  };\n\n  /**\n   * Zoom the drawing by the factor specified\n   *\n   * The zoom factor is a percentage with regards the original, for example if factor is set to 2\n   * it will double the size whereas if it is set to 0.5 it will half the size\n   *\n   * @param factor the zoom factor\n   */\n  zoom = (factor) => {\n    let canvas = this._fc;\n    let objects = canvas.getObjects();\n    for (let i in objects) {\n      objects[i].scaleX = objects[i].scaleX * factor;\n      objects[i].scaleY = objects[i].scaleY * factor;\n      objects[i].left = objects[i].left * factor;\n      objects[i].top = objects[i].top * factor;\n      objects[i].setCoords();\n    }\n    canvas.renderAll();\n    canvas.calcOffset();\n  };\n\n  /**\n   * Perform an undo operation on canvas, if it cannot undo it will leave the canvas intact\n   */\n  undo = () => {\n    let history = this._history;\n    let [obj, prevState, currState] = history.getCurrent();\n    history.undo();\n    if (obj.__removed) {\n      this.setState({ action: false }, () => {\n        this._fc.add(obj);\n        obj.__version -= 1;\n        obj.__removed = false;\n      });\n    } else if (obj.__version <= 1) {\n      this._fc.remove(obj);\n    } else {\n      obj.__version -= 1;\n      obj.setOptions(JSON.parse(prevState));\n      obj.setCoords();\n      this._fc.renderAll()\n    }\n    if (this.props.onChange) {\n      this.props.onChange()\n    }\n  };\n\n  /**\n   * Perform a redo operation on canvas, if it cannot redo it will leave the canvas intact\n   */\n  redo = () => {\n    let history = this._history;\n    if (history.canRedo()) {\n      let canvas = this._fc;\n      //noinspection Eslint\n      let [obj, prevState, currState] = history.redo();\n      if (obj.__version === 0) {\n        this.setState({ action: false }, () => {\n          canvas.add(obj);\n          obj.__version = 1\n        })\n      } else {\n        obj.__version += 1;\n        obj.setOptions(JSON.parse(currState))\n      }\n      obj.setCoords();\n      canvas.renderAll();\n      if (this.props.onChange) {\n        this.props.onChange()\n      }\n    }\n  };\n\n  /**\n   * Delegation method to check if we can perform an undo Operation, useful to disable/enable possible buttons\n   *\n   * @returns {*} true if we can undo otherwise false\n   */\n  canUndo = () => {\n    return this._history.canUndo()\n  };\n\n  /**\n   * Delegation method to check if we can perform a redo Operation, useful to disable/enable possible buttons\n   *\n   * @returns {*} true if we can redo otherwise false\n   */\n  canRedo = () => {\n    return this._history.canRedo()\n  };\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   *\n   * Available Options are\n   * <table style=\"width:100%\">\n   *\n   * <tr><td><b>Name</b></td><td><b>Type</b></td><td><b>Argument</b></td><td><b>Default</b></td><td><b>Description</b></td></tr>\n   * <tr><td>format</td> <td>String</td> <td><optional></td><td>png</td><td>The format of the output image. Either \"jpeg\" or \"png\"</td></tr>\n   * <tr><td>quality</td><td>Number</td><td><optional></td><td>1</td><td>Quality level (0..1). Only used for jpeg.</td></tr>\n   * <tr><td>multiplier</td><td>Number</td><td><optional></td><td>1</td><td>Multiplier to scale by</td></tr>\n   * <tr><td>left</td><td>Number</td><td><optional></td><td></td><td>Cropping left offset. Introduced in v1.2.14</td></tr>\n   * <tr><td>top</td><td>Number</td><td><optional></td><td></td><td>Cropping top offset. Introduced in v1.2.14</td></tr>\n   * <tr><td>width</td><td>Number</td><td><optional></td><td></td><td>Cropping width. Introduced in v1.2.14</td></tr>\n   * <tr><td>height</td><td>Number</td><td><optional></td><td></td><td>Cropping height. Introduced in v1.2.14</td></tr>\n   *\n   * </table>\n   *\n   * @returns {String} URL containing a representation of the object in the format specified by options.format\n   */\n  toDataURL = (options) => this._fc.toDataURL(options);\n\n  /**\n   * Returns JSON representation of canvas\n   *\n   * @param propertiesToInclude Array <optional> Any properties that you might want to additionally include in the output\n   * @returns {string} JSON string\n   */\n  toJSON = (propertiesToInclude) => this._fc.toJSON(propertiesToInclude);\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   *\n   * JSON format must conform to the one of fabric.Canvas#toDatalessJSON\n   *\n   * @param json JSON string or object\n   */\n  fromJSON = (json) => {\n    if (!json) return;\n    let canvas = this._fc;\n    setTimeout(() => {\n      canvas.loadFromJSON(json, () => {\n        canvas.renderAll();\n        if (this.props.onChange) {\n          this.props.onChange()\n        }\n      })\n    }, 100)\n  };\n\n  /**\n   * Clear the content of the canvas, this will also clear history but will return the canvas content as JSON to be\n   * used as needed in order to undo the clear if possible\n   *\n   * @param propertiesToInclude Array <optional> Any properties that you might want to additionally include in the output\n   * @returns {string} JSON string of the canvas just cleared\n   */\n  clear = (propertiesToInclude) => {\n    let discarded = this.toJSON(propertiesToInclude);\n    this._fc.clear();\n    this._history.clear();\n    return discarded\n  };\n\n  /**\n   * Remove selected object from the canvas\n   */\n  removeSelected = () => {\n    let canvas = this._fc;\n    let activeObj = canvas.getActiveObject();\n    if (activeObj) {\n      let selected = [];\n      if (activeObj.type === 'activeSelection') {\n        activeObj.forEachObject(obj => selected.push(obj));\n      } else {\n        selected.push(activeObj)\n      }\n      selected.forEach(obj => {\n        obj.__removed = true;\n        let objState = obj.toJSON();\n        obj.__originalState = objState;\n        let state = JSON.stringify(objState);\n        this._history.keep([obj, state, state]);\n        canvas.remove(obj);\n      });\n      canvas.discardActiveObject();\n      canvas.requestRenderAll();\n    }\n  };\n\n  copy = () => {\n    let canvas = this._fc;\n    canvas.getActiveObject().clone(cloned => this._clipboard = cloned);\n  };\n\n  paste = () => {\n    // clone again, so you can do multiple copies.\n    this._clipboard.clone(clonedObj => {\n      let canvas = this._fc;\n      canvas.discardActiveObject();\n      clonedObj.set({\n        left: clonedObj.left + 10,\n        top: clonedObj.top + 10,\n        evented: true,\n      });\n      if (clonedObj.type === 'activeSelection') {\n        // active selection needs a reference to the canvas.\n        clonedObj.canvas = canvas;\n        clonedObj.forEachObject(obj => canvas.add(obj));\n        clonedObj.setCoords();\n      } else {\n        canvas.add(clonedObj);\n      }\n      this._clipboard.top += 10;\n      this._clipboard.left += 10;\n      canvas.setActiveObject(clonedObj);\n      canvas.requestRenderAll();\n    });\n  };\n\n  /**\n   * Sets the background from the dataUrl given\n   *\n   * @param dataUrl the dataUrl to be used as a background\n   * @param options\n   */\n  setBackgroundFromDataUrl = (dataUrl, options = {}) => {\n    let canvas = this._fc;\n    if (options.stretched) {\n      delete options.stretched;\n      Object.assign(options, {\n        width: canvas.width,\n        height: canvas.height\n      })\n    }\n    if (options.stretchedX) {\n      delete options.stretchedX;\n      Object.assign(options, {\n        width: canvas.width\n      })\n    }\n    if (options.stretchedY) {\n      delete options.stretchedY;\n      Object.assign(options, {\n        height: canvas.height\n      })\n    }\n    let img = new Image();\n    img.onload = () => canvas.setBackgroundImage(new fabric.Image(img),\n      () => canvas.renderAll(), options);\n    img.src = dataUrl\n  };\n\n  addText = (text, options = {}) => {\n    let canvas = this._fc;\n    let iText = new fabric.IText(text, options);\n    let opts = {\n      left: (canvas.getWidth() - iText.width) * 0.5,\n      top: (canvas.getHeight() - iText.height) * 0.5,\n    };\n    Object.assign(options, opts);\n    iText.set({\n      'left': options.left,\n      'top': options.top\n    });\n\n    canvas.add(iText);\n  };\n\n  componentDidMount = () => {\n    let {\n      tool,\n      value,\n      undoSteps,\n      defaultValue,\n      backgroundColor\n    } = this.props;\n\n    let canvas = this._fc = new fabric.Canvas(this._canvas/*, {\n         preserveObjectStacking: false,\n         renderOnAddRemove: false,\n         skipTargetFind: true\n         }*/);\n\n    this._initTools(canvas);\n\n    // set initial backgroundColor\n    this._backgroundColor(backgroundColor)\n\n    let selectedTool = this._tools[tool];\n    selectedTool.configureCanvas(this.props);\n    this._selectedTool = selectedTool;\n\n    // Control resize\n    window.addEventListener('resize', this._resize, false);\n\n    // Initialize History, with maximum number of undo steps\n    this._history = new History(undoSteps);\n\n    // Events binding\n    canvas.on('object:added', this._onObjectAdded);\n    canvas.on('object:modified', this._onObjectModified);\n    canvas.on('object:removed', this._onObjectRemoved);\n    canvas.on('mouse:down', this._onMouseDown);\n    canvas.on('mouse:move', this._onMouseMove);\n    canvas.on('mouse:up', this._onMouseUp);\n    canvas.on('mouse:out', this._onMouseOut);\n    canvas.on('object:moving', this._onObjectMoving);\n    canvas.on('object:scaling', this._onObjectScaling);\n    canvas.on('object:rotating', this._onObjectRotating);\n    // IText Events fired on Adding Text\n    // canvas.on(\"text:event:changed\", console.log)\n    // canvas.on(\"text:selection:changed\", console.log)\n    // canvas.on(\"text:editing:entered\", console.log)\n    // canvas.on(\"text:editing:exited\", console.log)\n\n    this.disableTouchScroll();\n\n    this._resize();\n\n    // initialize canvas with controlled value if exists\n    (value || defaultValue) && this.fromJSON(value || defaultValue);\n\n  };\n\n  componentWillUnmount = () => window.removeEventListener('resize', this._resize);\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (this.state.parentWidth !== prevState.parentWidth\n      || this.props.width !== prevProps.width\n      || this.props.height !== prevProps.height) {\n\n      this._resize()\n    }\n\n    if (this.props.tool !== prevProps.tool) {\n      this._selectedTool = this._tools[this.props.tool] || this._tools[Tool.Pencil]\n    }\n\n    //Bring the cursor back to default if it is changed by a tool\n    this._fc.defaultCursor = 'default';\n    this._selectedTool.configureCanvas(this.props);\n\n    if (this.props.backgroundColor !== prevProps.backgroundColor) {\n      this._backgroundColor(this.props.backgroundColor)\n    }\n\n    if ((this.props.value !== prevProps.value) || (this.props.value && this.props.forceValue)) {\n      this.fromJSON(this.props.value);\n    }\n  };\n\n  render = () => {\n    let {\n      className,\n      style,\n      width,\n      height\n    } = this.props;\n\n    let canvasDivStyle = Object.assign({}, style ? style : {},\n      width ? { width: width } : {},\n      height ? { height: height } : { height: 512 });\n\n    return (\n      <div\n        className={className}\n        ref={(c) => this._container = c}\n        style={canvasDivStyle}>\n        <canvas\n          id={uuid4()}\n          ref={(c) => this._canvas = c}>\n          Sorry, Canvas HTML5 element is not supported by your browser\n          :(\n        </canvas>\n      </div>\n    )\n  }\n}\n\nexport default SketchField"]},"metadata":{},"sourceType":"module"}