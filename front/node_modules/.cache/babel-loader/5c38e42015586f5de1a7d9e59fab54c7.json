{"ast":null,"code":"import _classCallCheck from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/*eslint no-unused-vars: 0*/\nimport FabricCanvasTool from './fabrictool';\n\nvar fabric = require('fabric').fabric;\n\nvar Line =\n/*#__PURE__*/\nfunction (_FabricCanvasTool) {\n  _inherits(Line, _FabricCanvasTool);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Line).apply(this, arguments));\n  }\n\n  _createClass(Line, [{\n    key: \"configureCanvas\",\n    value: function configureCanvas(props) {\n      var canvas = this._canvas;\n      canvas.isDrawingMode = canvas.selection = false;\n      canvas.forEachObject(function (o) {\n        return o.selectable = o.evented = false;\n      });\n      this._width = props.lineWidth;\n      this._color = props.lineColor;\n    }\n  }, {\n    key: \"doMouseDown\",\n    value: function doMouseDown(o) {\n      this.isDown = true;\n      var canvas = this._canvas;\n      var pointer = canvas.getPointer(o.e);\n      var points = [pointer.x, pointer.y, pointer.x, pointer.y];\n      this.line = new fabric.Line(points, {\n        strokeWidth: this._width,\n        fill: this._color,\n        stroke: this._color,\n        originX: 'center',\n        originY: 'center',\n        selectable: false,\n        evented: false\n      });\n      canvas.add(this.line);\n    }\n  }, {\n    key: \"doMouseMove\",\n    value: function doMouseMove(o) {\n      if (!this.isDown) return;\n      var canvas = this._canvas;\n      var pointer = canvas.getPointer(o.e);\n      this.line.set({\n        x2: pointer.x,\n        y2: pointer.y\n      });\n      this.line.setCoords();\n      canvas.renderAll();\n    }\n  }, {\n    key: \"doMouseUp\",\n    value: function doMouseUp(o) {\n      this.isDown = false;\n    }\n  }, {\n    key: \"doMouseOut\",\n    value: function doMouseOut(o) {\n      this.isDown = false;\n    }\n  }]);\n\n  return Line;\n}(FabricCanvasTool);\n\nexport default Line;","map":{"version":3,"sources":["/mnt/d/20160745/github/gadgetProj/front/src/components/react-sketch/line.js"],"names":["FabricCanvasTool","fabric","require","Line","props","canvas","_canvas","isDrawingMode","selection","forEachObject","o","selectable","evented","_width","lineWidth","_color","lineColor","isDown","pointer","getPointer","e","points","x","y","line","strokeWidth","fill","stroke","originX","originY","add","set","x2","y2","setCoords","renderAll"],"mappings":";;;;;;AAAA;AAEA,OAAOA,gBAAP,MAA6B,cAA7B;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,MAAjC;;IAEME,I;;;;;;;;;;;;;oCAEYC,K,EAAO;AACrB,UAAIC,MAAM,GAAG,KAAKC,OAAlB;AACAD,MAAAA,MAAM,CAACE,aAAP,GAAuBF,MAAM,CAACG,SAAP,GAAmB,KAA1C;AACAH,MAAAA,MAAM,CAACI,aAAP,CAAqB,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,UAAF,GAAeD,CAAC,CAACE,OAAF,GAAY,KAAlC;AAAA,OAArB;AACA,WAAKC,MAAL,GAAcT,KAAK,CAACU,SAApB;AACA,WAAKC,MAAL,GAAcX,KAAK,CAACY,SAApB;AACD;;;gCAEWN,C,EAAG;AACb,WAAKO,MAAL,GAAc,IAAd;AACA,UAAIZ,MAAM,GAAG,KAAKC,OAAlB;AACA,UAAIY,OAAO,GAAGb,MAAM,CAACc,UAAP,CAAkBT,CAAC,CAACU,CAApB,CAAd;AACA,UAAIC,MAAM,GAAG,CAACH,OAAO,CAACI,CAAT,EAAYJ,OAAO,CAACK,CAApB,EAAuBL,OAAO,CAACI,CAA/B,EAAkCJ,OAAO,CAACK,CAA1C,CAAb;AACA,WAAKC,IAAL,GAAY,IAAIvB,MAAM,CAACE,IAAX,CAAgBkB,MAAhB,EAAwB;AAClCI,QAAAA,WAAW,EAAE,KAAKZ,MADgB;AAElCa,QAAAA,IAAI,EAAE,KAAKX,MAFuB;AAGlCY,QAAAA,MAAM,EAAE,KAAKZ,MAHqB;AAIlCa,QAAAA,OAAO,EAAE,QAJyB;AAKlCC,QAAAA,OAAO,EAAE,QALyB;AAMlClB,QAAAA,UAAU,EAAE,KANsB;AAOlCC,QAAAA,OAAO,EAAE;AAPyB,OAAxB,CAAZ;AASAP,MAAAA,MAAM,CAACyB,GAAP,CAAW,KAAKN,IAAhB;AACD;;;gCAEWd,C,EAAG;AACb,UAAI,CAAC,KAAKO,MAAV,EAAkB;AAClB,UAAIZ,MAAM,GAAG,KAAKC,OAAlB;AACA,UAAIY,OAAO,GAAGb,MAAM,CAACc,UAAP,CAAkBT,CAAC,CAACU,CAApB,CAAd;AACA,WAAKI,IAAL,CAAUO,GAAV,CAAc;AAAEC,QAAAA,EAAE,EAAEd,OAAO,CAACI,CAAd;AAAiBW,QAAAA,EAAE,EAAEf,OAAO,CAACK;AAA7B,OAAd;AACA,WAAKC,IAAL,CAAUU,SAAV;AACA7B,MAAAA,MAAM,CAAC8B,SAAP;AACD;;;8BAESzB,C,EAAG;AACX,WAAKO,MAAL,GAAc,KAAd;AACD;;;+BAEUP,C,EAAG;AACZ,WAAKO,MAAL,GAAc,KAAd;AACD;;;;EA1CgBjB,gB;;AA6CnB,eAAeG,IAAf","sourcesContent":["/*eslint no-unused-vars: 0*/\n\nimport FabricCanvasTool from './fabrictool'\n\nconst fabric = require('fabric').fabric;\n\nclass Line extends FabricCanvasTool {\n\n  configureCanvas(props) {\n    let canvas = this._canvas;\n    canvas.isDrawingMode = canvas.selection = false;\n    canvas.forEachObject((o) => o.selectable = o.evented = false);\n    this._width = props.lineWidth;\n    this._color = props.lineColor;\n  }\n\n  doMouseDown(o) {\n    this.isDown = true;\n    let canvas = this._canvas;\n    var pointer = canvas.getPointer(o.e);\n    var points = [pointer.x, pointer.y, pointer.x, pointer.y];\n    this.line = new fabric.Line(points, {\n      strokeWidth: this._width,\n      fill: this._color,\n      stroke: this._color,\n      originX: 'center',\n      originY: 'center',\n      selectable: false,\n      evented: false\n    });\n    canvas.add(this.line);\n  }\n\n  doMouseMove(o) {\n    if (!this.isDown) return;\n    let canvas = this._canvas;\n    var pointer = canvas.getPointer(o.e);\n    this.line.set({ x2: pointer.x, y2: pointer.y });\n    this.line.setCoords();\n    canvas.renderAll();\n  }\n\n  doMouseUp(o) {\n    this.isDown = false;\n  }\n\n  doMouseOut(o) {\n    this.isDown = false;\n  }\n}\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}