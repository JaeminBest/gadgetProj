{"ast":null,"code":"import _classCallCheck from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/d/20160745/github/gadgetProj/front/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/*eslint no-unused-vars: 0*/\nimport FabricCanvasTool from './fabrictool';\n\nvar fabric = require('fabric').fabric;\n\nvar Rectangle =\n/*#__PURE__*/\nfunction (_FabricCanvasTool) {\n  _inherits(Rectangle, _FabricCanvasTool);\n\n  function Rectangle() {\n    _classCallCheck(this, Rectangle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Rectangle).apply(this, arguments));\n  }\n\n  _createClass(Rectangle, [{\n    key: \"configureCanvas\",\n    value: function configureCanvas(props) {\n      var canvas = this._canvas;\n      canvas.isDrawingMode = canvas.selection = false;\n      canvas.forEachObject(function (o) {\n        return o.selectable = o.evented = false;\n      });\n      this._width = props.lineWidth;\n      this._color = props.lineColor;\n      this._fill = props.fillColor;\n    }\n  }, {\n    key: \"doMouseDown\",\n    value: function doMouseDown(o) {\n      var canvas = this._canvas;\n      this.isDown = true;\n      var pointer = canvas.getPointer(o.e);\n      this.startX = pointer.x;\n      this.startY = pointer.y;\n      this.rect = new fabric.Rect({\n        left: this.startX,\n        top: this.startY,\n        originX: 'left',\n        originY: 'top',\n        width: pointer.x - this.startX,\n        height: pointer.y - this.startY,\n        stroke: this._color,\n        strokeWidth: this._width,\n        fill: this._fill,\n        //fill: 'rgba(255,0,0,0.5)',\n        transparentCorners: false,\n        selectable: false,\n        evented: false,\n        angle: 0\n      });\n      canvas.add(this.rect);\n    }\n  }, {\n    key: \"doMouseMove\",\n    value: function doMouseMove(o) {\n      if (!this.isDown) return;\n      var canvas = this._canvas;\n      var pointer = canvas.getPointer(o.e);\n\n      if (this.startX > pointer.x) {\n        this.rect.set({\n          left: Math.abs(pointer.x)\n        });\n      }\n\n      if (this.startY > pointer.y) {\n        this.rect.set({\n          top: Math.abs(pointer.y)\n        });\n      }\n\n      this.rect.set({\n        width: Math.abs(this.startX - pointer.x)\n      });\n      this.rect.set({\n        height: Math.abs(this.startY - pointer.y)\n      });\n      this.rect.setCoords();\n      canvas.renderAll();\n    }\n  }, {\n    key: \"doMouseUp\",\n    value: function doMouseUp(o) {\n      this.isDown = false;\n    }\n  }]);\n\n  return Rectangle;\n}(FabricCanvasTool);\n\nexport default Rectangle;","map":{"version":3,"sources":["/mnt/d/20160745/github/gadgetProj/front/src/components/react-sketch/rectangle.js"],"names":["FabricCanvasTool","fabric","require","Rectangle","props","canvas","_canvas","isDrawingMode","selection","forEachObject","o","selectable","evented","_width","lineWidth","_color","lineColor","_fill","fillColor","isDown","pointer","getPointer","e","startX","x","startY","y","rect","Rect","left","top","originX","originY","width","height","stroke","strokeWidth","fill","transparentCorners","angle","add","set","Math","abs","setCoords","renderAll"],"mappings":"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","sourcesContent":["/*eslint no-unused-vars: 0*/\n\nimport FabricCanvasTool from './fabrictool'\n\nconst fabric = require('fabric').fabric;\n\nclass Rectangle extends FabricCanvasTool {\n\n  configureCanvas(props) {\n    let canvas = this._canvas;\n    canvas.isDrawingMode = canvas.selection = false;\n    canvas.forEachObject((o) => o.selectable = o.evented = false);\n    this._width = props.lineWidth;\n    this._color = props.lineColor;\n    this._fill = props.fillColor;\n  }\n\n  doMouseDown(o) {\n    let canvas = this._canvas;\n    this.isDown = true;\n    let pointer = canvas.getPointer(o.e);\n    this.startX = pointer.x;\n    this.startY = pointer.y;\n    this.rect = new fabric.Rect({\n      left: this.startX,\n      top: this.startY,\n      originX: 'left',\n      originY: 'top',\n      width: pointer.x - this.startX,\n      height: pointer.y - this.startY,\n      stroke: this._color,\n      strokeWidth: this._width,\n      fill: this._fill,\n      //fill: 'rgba(255,0,0,0.5)',\n      transparentCorners: false,\n      selectable: false,\n      evented: false,\n      angle: 0\n    });\n    canvas.add(this.rect);\n  }\n\n  doMouseMove(o) {\n    if (!this.isDown) return;\n    let canvas = this._canvas;\n    let pointer = canvas.getPointer(o.e);\n    if (this.startX > pointer.x) {\n      this.rect.set({ left: Math.abs(pointer.x) });\n    }\n    if (this.startY > pointer.y) {\n      this.rect.set({ top: Math.abs(pointer.y) });\n    }\n    this.rect.set({ width: Math.abs(this.startX - pointer.x) });\n    this.rect.set({ height: Math.abs(this.startY - pointer.y) });\n    this.rect.setCoords();\n    canvas.renderAll();\n  }\n\n  doMouseUp(o) {\n    this.isDown = false;\n  }\n}\n\nexport default Rectangle;"]},"metadata":{},"sourceType":"module"}