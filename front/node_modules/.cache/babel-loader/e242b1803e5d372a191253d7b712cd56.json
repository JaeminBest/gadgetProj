{"ast":null,"code":"import axios from 'axios';\nexport function getImage(image_route, org_id) {\n  return axios.get(\"http://localhost:8000/\".concat(image_route), {\n    params: {\n      id: \"\".concat(org_id)\n    }\n  });\n}\nexport function postImage(user_id, org_id, upload_file, upload_route) {\n  return axios.post(\"http://localhost:8000/\".concat(upload_route), {\n    user_id: \"\".concat(user_id),\n    org_id: \"\".concat(org_id),\n    upload_file: \"\".concat(upload_file)\n  });\n}\nexport function imageLoader(src) {\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n\n    img.onload = function () {\n      return resolve(img);\n    };\n\n    img.src = src;\n  });\n}\nexport function imageFixer(src, zoom_factor) {\n  return new Promise(function (resolve, reject) {\n    var img = new Image(); //console.log(\"zoom factor received: \", zoom_factor);\n    //console.log(`${zoom_factor * 100}%`);\n\n    img.onload = function () {\n      var width = img.width * zoom_factor;\n      var height = img.height * zoom_factor; //console.log(\"width x height : \", width,\"x\",height);\n\n      var elem = document.createElement('canvas');\n      elem.width = width;\n      elem.height = height; //console.log(\"elem width x height : \", elem.width,\"x\",elem.height);\n\n      var ctx = elem.getContext('2d');\n      ctx.drawImage(img, 0, 0, width, height);\n      var ctxUrl = ctx.canvas.toDataURL(); //console.log(\"context url : \",ctxUrl);\n\n      resolve(ctxUrl);\n    };\n\n    img.src = src;\n  });\n}\n/*\r\nexport function imageZoom(img, zoom_factor) {\r\n    return new Promise((resolve, reject) => {\r\n        let width = \r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\nexport function postImageImm(image_body) {\r\n    return axios.post(`admin/request_checking`, image_body);\r\n}\r\n*/","map":{"version":3,"sources":["/mnt/d/20160745/github/gadgetProj/front/src/lib/api.js"],"names":["axios","getImage","image_route","org_id","get","params","id","postImage","user_id","upload_file","upload_route","post","imageLoader","src","Promise","resolve","reject","img","Image","onload","imageFixer","zoom_factor","width","height","elem","document","createElement","ctx","getContext","drawImage","ctxUrl","canvas","toDataURL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,QAAT,CAAkBC,WAAlB,EAA+BC,MAA/B,EAAuC;AAC1C,SAAOH,KAAK,CAACI,GAAN,iCAAmCF,WAAnC,GAAkD;AACrDG,IAAAA,MAAM,EAAE;AACJC,MAAAA,EAAE,YAAMH,MAAN;AADE;AAD6C,GAAlD,CAAP;AAKH;AAED,OAAO,SAASI,SAAT,CAAmBC,OAAnB,EAA4BL,MAA5B,EAAoCM,WAApC,EAAiDC,YAAjD,EAA+D;AAClE,SAAOV,KAAK,CAACW,IAAN,iCAAoCD,YAApC,GAAoD;AACvDF,IAAAA,OAAO,YAAKA,OAAL,CADgD;AAEvDL,IAAAA,MAAM,YAAKA,MAAL,CAFiD;AAGvDM,IAAAA,WAAW,YAAKA,WAAL;AAH4C,GAApD,CAAP;AAKH;AAGD,OAAO,SAASG,WAAT,CAAqBC,GAArB,EAA0B;AAC7B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa;AAAA,aAAMJ,OAAO,CAACE,GAAD,CAAb;AAAA,KAAb;;AACAA,IAAAA,GAAG,CAACJ,GAAJ,GAAUA,GAAV;AACH,GAJM,CAAP;AAMH;AAED,OAAO,SAASO,UAAT,CAAoBP,GAApB,EAAyBQ,WAAzB,EAAsC;AACzC,SAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV,CADoC,CAEpC;AACA;;AAEAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,YAAM;AACf,UAAMG,KAAK,GAAGL,GAAG,CAACK,KAAJ,GAAYD,WAA1B;AACA,UAAME,MAAM,GAAGN,GAAG,CAACM,MAAJ,GAAaF,WAA5B,CAFe,CAGf;;AAEA,UAAMG,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,MAAAA,IAAI,CAACF,KAAL,GAAaA,KAAb;AACAE,MAAAA,IAAI,CAACD,MAAL,GAAcA,MAAd,CAPe,CAQf;;AAEA,UAAMI,GAAG,GAAGH,IAAI,CAACI,UAAL,CAAgB,IAAhB,CAAZ;AACAD,MAAAA,GAAG,CAACE,SAAJ,CAAcZ,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBK,KAAzB,EAAgCC,MAAhC;AACA,UAAMO,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAWC,SAAX,EAAf,CAZe,CAcf;;AACAjB,MAAAA,OAAO,CAACe,MAAD,CAAP;AAEH,KAjBD;;AAkBAb,IAAAA,GAAG,CAACJ,GAAJ,GAAUA,GAAV;AACH,GAxBM,CAAP;AA0BH;AAED","sourcesContent":["import axios from 'axios';\r\n\r\nexport function getImage(image_route, org_id) {\r\n    return axios.get(`http://localhost:8000/${image_route}`, {\r\n        params: {\r\n            id : `${org_id}`\r\n        }\r\n    });\r\n}\r\n\r\nexport function postImage(user_id, org_id, upload_file, upload_route) {\r\n    return axios.post(`http://localhost:8000/${upload_route}`, {\r\n        user_id: `${user_id}`,\r\n        org_id: `${org_id}`,\r\n        upload_file: `${upload_file}`\r\n    });\r\n}\r\n\r\n\r\nexport function imageLoader(src) {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image();\r\n        img.onload = () => resolve(img);\r\n        img.src = src;\r\n    });\r\n    \r\n}\r\n\r\nexport function imageFixer(src, zoom_factor) {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        //console.log(\"zoom factor received: \", zoom_factor);\r\n        //console.log(`${zoom_factor * 100}%`);\r\n        \r\n        img.onload = () => {\r\n            const width = img.width * zoom_factor;\r\n            const height = img.height * zoom_factor;\r\n            //console.log(\"width x height : \", width,\"x\",height);\r\n            \r\n            const elem = document.createElement('canvas');\r\n            elem.width = width;\r\n            elem.height = height;\r\n            //console.log(\"elem width x height : \", elem.width,\"x\",elem.height);\r\n                       \r\n            const ctx = elem.getContext('2d');\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n            const ctxUrl = ctx.canvas.toDataURL();\r\n            \r\n            //console.log(\"context url : \",ctxUrl);\r\n            resolve(ctxUrl);\r\n            \r\n        }\r\n        img.src = src;\r\n    })\r\n\r\n}\r\n\r\n/*\r\nexport function imageZoom(img, zoom_factor) {\r\n    return new Promise((resolve, reject) => {\r\n        let width = \r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\nexport function postImageImm(image_body) {\r\n    return axios.post(`admin/request_checking`, image_body);\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}